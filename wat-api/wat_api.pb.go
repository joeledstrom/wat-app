// Code generated by protoc-gen-go.
// source: wat_api.proto
// DO NOT EDIT!

/*
Package wat_api is a generated protocol buffer package.

It is generated from these files:
	wat_api.proto

It has these top-level messages:
	ClientMessage
	ServerMessage
*/
package wat_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientMessage struct {
	Sender  string `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *ClientMessage) Reset()                    { *m = ClientMessage{} }
func (m *ClientMessage) String() string            { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()               {}
func (*ClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClientMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ClientMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ServerMessage struct {
	Message   *ClientMessage             `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ServerMessage) Reset()                    { *m = ServerMessage{} }
func (m *ServerMessage) String() string            { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()               {}
func (*ServerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServerMessage) GetMessage() *ClientMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ServerMessage) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientMessage)(nil), "wat_api.ClientMessage")
	proto.RegisterType((*ServerMessage)(nil), "wat_api.ServerMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Wat service

type WatClient interface {
	ChatConnection(ctx context.Context, opts ...grpc.CallOption) (Wat_ChatConnectionClient, error)
}

type watClient struct {
	cc *grpc.ClientConn
}

func NewWatClient(cc *grpc.ClientConn) WatClient {
	return &watClient{cc}
}

func (c *watClient) ChatConnection(ctx context.Context, opts ...grpc.CallOption) (Wat_ChatConnectionClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Wat_serviceDesc.Streams[0], c.cc, "/wat_api.Wat/ChatConnection", opts...)
	if err != nil {
		return nil, err
	}
	x := &watChatConnectionClient{stream}
	return x, nil
}

type Wat_ChatConnectionClient interface {
	Send(*ClientMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type watChatConnectionClient struct {
	grpc.ClientStream
}

func (x *watChatConnectionClient) Send(m *ClientMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *watChatConnectionClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Wat service

type WatServer interface {
	ChatConnection(Wat_ChatConnectionServer) error
}

func RegisterWatServer(s *grpc.Server, srv WatServer) {
	s.RegisterService(&_Wat_serviceDesc, srv)
}

func _Wat_ChatConnection_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WatServer).ChatConnection(&watChatConnectionServer{stream})
}

type Wat_ChatConnectionServer interface {
	Send(*ServerMessage) error
	Recv() (*ClientMessage, error)
	grpc.ServerStream
}

type watChatConnectionServer struct {
	grpc.ServerStream
}

func (x *watChatConnectionServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *watChatConnectionServer) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Wat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wat_api.Wat",
	HandlerType: (*WatServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ChatConnection",
			Handler:       _Wat_ChatConnection_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "wat_api.proto",
}

func init() { proto.RegisterFile("wat_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8e, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0xad, 0x26, 0x8f, 0xbc, 0xfb, 0x82, 0x43, 0x87, 0x17, 0xc2, 0xa2, 0x61, 0x62, 0x2a,
	0x04, 0x17, 0x57, 0x43, 0xe2, 0xc6, 0x82, 0x26, 0x8e, 0xa6, 0xe0, 0x15, 0x9b, 0x40, 0x4b, 0xda,
	0xab, 0x0e, 0xfe, 0x79, 0x93, 0x42, 0x25, 0x0c, 0x6e, 0x3d, 0xb7, 0x5f, 0xce, 0xf9, 0x20, 0xfe,
	0x96, 0xf4, 0x2a, 0x67, 0x25, 0x66, 0x6b, 0xc8, 0xf0, 0x68, 0x8d, 0xe9, 0xcd, 0x60, 0xcc, 0x30,
	0x62, 0xe1, 0xcf, 0xdd, 0xe7, 0x7b, 0x41, 0x6a, 0x42, 0x47, 0x72, 0x9a, 0x17, 0x32, 0x7b, 0x80,
	0xb8, 0x1e, 0x15, 0x6a, 0x6a, 0xd0, 0x39, 0x39, 0x20, 0x3f, 0xc3, 0xc1, 0xa1, 0x7e, 0x43, 0x9b,
	0xb0, 0x5b, 0x96, 0x1f, 0xdb, 0x35, 0xf1, 0x04, 0xa2, 0xde, 0x68, 0x42, 0x4d, 0xc9, 0xa5, 0xff,
	0x08, 0x31, 0xfb, 0x81, 0xf8, 0x09, 0xed, 0x17, 0xda, 0x50, 0x51, 0x42, 0x34, 0x2d, 0x4f, 0xdf,
	0x71, 0xaa, 0xce, 0x22, 0xe8, 0xed, 0xb6, 0xda, 0x80, 0xf1, 0x7b, 0x38, 0xfe, 0x89, 0xf9, 0xfa,
	0x53, 0x95, 0x8a, 0x45, 0x5d, 0x04, 0x75, 0xf1, 0x1c, 0x88, 0x76, 0x83, 0xab, 0x06, 0xae, 0x5e,
	0x24, 0xf1, 0x47, 0xb8, 0xae, 0x3f, 0x24, 0xd5, 0x46, 0x6b, 0xec, 0x49, 0x19, 0xcd, 0xff, 0xd9,
	0x4c, 0xb7, 0xfb, 0x4e, 0x3a, 0xbb, 0xc8, 0x59, 0xc9, 0xba, 0x83, 0x5f, 0xbb, 0xfb, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x9b, 0x8e, 0x2c, 0xf1, 0x50, 0x01, 0x00, 0x00,
}
