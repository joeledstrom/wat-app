// Code generated by protoc-gen-go.
// source: wat_api.proto
// DO NOT EDIT!

/*
Package wat_api is a generated protocol buffer package.

It is generated from these files:
	wat_api.proto

It has these top-level messages:
	Registration
	RegistrationResponse
	ClientMessage
	ServerMessage
	Location
*/
package wat_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegistrationResponse_Status int32

const (
	RegistrationResponse_OK                  RegistrationResponse_Status = 0
	RegistrationResponse_NICK_ALREADY_IN_USE RegistrationResponse_Status = 1
)

var RegistrationResponse_Status_name = map[int32]string{
	0: "OK",
	1: "NICK_ALREADY_IN_USE",
}
var RegistrationResponse_Status_value = map[string]int32{
	"OK": 0,
	"NICK_ALREADY_IN_USE": 1,
}

func (x RegistrationResponse_Status) String() string {
	return proto.EnumName(RegistrationResponse_Status_name, int32(x))
}
func (RegistrationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type Registration struct {
	Nick     string    `protobuf:"bytes,1,opt,name=nick" json:"nick,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
}

func (m *Registration) Reset()                    { *m = Registration{} }
func (m *Registration) String() string            { return proto.CompactTextString(m) }
func (*Registration) ProtoMessage()               {}
func (*Registration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Registration) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Registration) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type RegistrationResponse struct {
	Status RegistrationResponse_Status `protobuf:"varint,1,opt,name=status,enum=wat_api.RegistrationResponse_Status" json:"status,omitempty"`
	Token  string                      `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RegistrationResponse) Reset()                    { *m = RegistrationResponse{} }
func (m *RegistrationResponse) String() string            { return proto.CompactTextString(m) }
func (*RegistrationResponse) ProtoMessage()               {}
func (*RegistrationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegistrationResponse) GetStatus() RegistrationResponse_Status {
	if m != nil {
		return m.Status
	}
	return RegistrationResponse_OK
}

func (m *RegistrationResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ClientMessage struct {
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *ClientMessage) Reset()                    { *m = ClientMessage{} }
func (m *ClientMessage) String() string            { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()               {}
func (*ClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ServerMessage struct {
	Nick     string    `protobuf:"bytes,1,opt,name=nick" json:"nick,omitempty"`
	Content  string    `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Location *Location `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
}

func (m *ServerMessage) Reset()                    { *m = ServerMessage{} }
func (m *ServerMessage) String() string            { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()               {}
func (*ServerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ServerMessage) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *ServerMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ServerMessage) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Location struct {
	City string `protobuf:"bytes,1,opt,name=city" json:"city,omitempty"`
	Loc  string `protobuf:"bytes,2,opt,name=loc" json:"loc,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Location) GetLoc() string {
	if m != nil {
		return m.Loc
	}
	return ""
}

func init() {
	proto.RegisterType((*Registration)(nil), "wat_api.Registration")
	proto.RegisterType((*RegistrationResponse)(nil), "wat_api.RegistrationResponse")
	proto.RegisterType((*ClientMessage)(nil), "wat_api.ClientMessage")
	proto.RegisterType((*ServerMessage)(nil), "wat_api.ServerMessage")
	proto.RegisterType((*Location)(nil), "wat_api.Location")
	proto.RegisterEnum("wat_api.RegistrationResponse_Status", RegistrationResponse_Status_name, RegistrationResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Wat service

type WatClient interface {
	RegisterClient(ctx context.Context, in *Registration, opts ...grpc.CallOption) (*RegistrationResponse, error)
	OpenChat(ctx context.Context, opts ...grpc.CallOption) (Wat_OpenChatClient, error)
}

type watClient struct {
	cc *grpc.ClientConn
}

func NewWatClient(cc *grpc.ClientConn) WatClient {
	return &watClient{cc}
}

func (c *watClient) RegisterClient(ctx context.Context, in *Registration, opts ...grpc.CallOption) (*RegistrationResponse, error) {
	out := new(RegistrationResponse)
	err := grpc.Invoke(ctx, "/wat_api.Wat/RegisterClient", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watClient) OpenChat(ctx context.Context, opts ...grpc.CallOption) (Wat_OpenChatClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Wat_serviceDesc.Streams[0], c.cc, "/wat_api.Wat/OpenChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &watOpenChatClient{stream}
	return x, nil
}

type Wat_OpenChatClient interface {
	Send(*ClientMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type watOpenChatClient struct {
	grpc.ClientStream
}

func (x *watOpenChatClient) Send(m *ClientMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *watOpenChatClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Wat service

type WatServer interface {
	RegisterClient(context.Context, *Registration) (*RegistrationResponse, error)
	OpenChat(Wat_OpenChatServer) error
}

func RegisterWatServer(s *grpc.Server, srv WatServer) {
	s.RegisterService(&_Wat_serviceDesc, srv)
}

func _Wat_RegisterClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Registration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatServer).RegisterClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wat_api.Wat/RegisterClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatServer).RegisterClient(ctx, req.(*Registration))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wat_OpenChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WatServer).OpenChat(&watOpenChatServer{stream})
}

type Wat_OpenChatServer interface {
	Send(*ServerMessage) error
	Recv() (*ClientMessage, error)
	grpc.ServerStream
}

type watOpenChatServer struct {
	grpc.ServerStream
}

func (x *watOpenChatServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *watOpenChatServer) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Wat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wat_api.Wat",
	HandlerType: (*WatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterClient",
			Handler:    _Wat_RegisterClient_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OpenChat",
			Handler:       _Wat_OpenChat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "wat_api.proto",
}

func init() { proto.RegisterFile("wat_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x5d, 0x4b, 0x3a, 0x41,
	0x14, 0xc6, 0xff, 0xa3, 0xff, 0x56, 0x3d, 0xa5, 0xd8, 0xc9, 0x4a, 0x84, 0x40, 0x96, 0x2e, 0xf4,
	0x22, 0x11, 0xbb, 0x8d, 0x40, 0xcc, 0x40, 0x34, 0xa5, 0x91, 0x88, 0xae, 0x96, 0x69, 0x19, 0x6c,
	0x70, 0x99, 0x59, 0x76, 0x4e, 0x45, 0x1f, 0xa2, 0xcb, 0xbe, 0x6f, 0xb8, 0x2f, 0x96, 0x60, 0x75,
	0x77, 0x5e, 0x9e, 0xf3, 0x3c, 0xbb, 0x3f, 0x06, 0xca, 0xaf, 0x82, 0x3c, 0x11, 0xaa, 0x4e, 0x18,
	0x19, 0x32, 0x58, 0x48, 0x5b, 0xf7, 0x16, 0xf6, 0xb8, 0x5c, 0x28, 0x4b, 0x91, 0x20, 0x65, 0x34,
	0x22, 0xfc, 0xd7, 0xca, 0x5f, 0xd6, 0x59, 0x93, 0xb5, 0x4a, 0x3c, 0xae, 0xf1, 0x0c, 0x8a, 0x81,
	0xf1, 0xe3, 0x7d, 0x3d, 0xd7, 0x64, 0xad, 0xdd, 0xde, 0x7e, 0x27, 0xb3, 0x9b, 0xa4, 0x0b, 0xbe,
	0x96, 0xb8, 0x1f, 0x0c, 0x6a, 0xdf, 0x3d, 0xb9, 0xb4, 0xa1, 0xd1, 0x56, 0xe2, 0x05, 0x38, 0x96,
	0x04, 0x3d, 0xdb, 0xd8, 0xbd, 0xd2, 0x3b, 0x5d, 0xbb, 0x6c, 0x93, 0x77, 0xe6, 0xb1, 0x96, 0xa7,
	0x37, 0x58, 0x83, 0x1d, 0x32, 0x4b, 0x99, 0x7c, 0x42, 0x89, 0x27, 0x8d, 0xdb, 0x06, 0x27, 0xd1,
	0xa1, 0x03, 0xb9, 0xd9, 0xb8, 0xfa, 0x0f, 0x8f, 0xe1, 0x60, 0x3a, 0x1a, 0x8c, 0xbd, 0xfe, 0x84,
	0x0f, 0xfb, 0x57, 0x0f, 0xde, 0x68, 0xea, 0xdd, 0xcd, 0x87, 0x55, 0xe6, 0xb6, 0xa1, 0x3c, 0x08,
	0x94, 0xd4, 0x74, 0x23, 0xad, 0x15, 0x0b, 0x89, 0x75, 0x28, 0xf8, 0x46, 0x93, 0xd4, 0x94, 0x7a,
	0x66, 0xad, 0x1b, 0x40, 0x79, 0x2e, 0xa3, 0x17, 0x19, 0x65, 0xd2, 0x6d, 0x58, 0x7e, 0x3c, 0xdf,
	0x00, 0x96, 0xff, 0x1b, 0x58, 0x17, 0x8a, 0xd9, 0x74, 0x15, 0xe4, 0x2b, 0x7a, 0xcb, 0x82, 0x56,
	0x35, 0x56, 0x21, 0x1f, 0x18, 0x3f, 0x0d, 0x59, 0x95, 0xbd, 0x77, 0x06, 0xf9, 0x7b, 0x41, 0x78,
	0x0d, 0x95, 0x04, 0x9d, 0x8c, 0x92, 0x5f, 0xc3, 0xc3, 0xad, 0x4c, 0x1b, 0x27, 0xbf, 0xa2, 0xc6,
	0x4b, 0x28, 0xce, 0x42, 0xa9, 0x07, 0x4f, 0x82, 0xf0, 0x68, 0x2d, 0xdd, 0xa0, 0xd5, 0xf8, 0x9a,
	0x6f, 0xa0, 0x69, 0xb1, 0x2e, 0x7b, 0x74, 0xe2, 0x57, 0x75, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff,
	0xfc, 0x30, 0x35, 0x1f, 0x66, 0x02, 0x00, 0x00,
}
